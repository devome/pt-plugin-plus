!function(e,t){const s="X-Transmission-Session-Id";t.transmission=class{init(e){if(this.options=e,this.headers=[],e.loginName&&e.loginPwd&&(this.headers.Authorization="Basic "+(new Base64).encode(e.loginName+":"+e.loginPwd)),-1==this.options.address.indexOf("rpc")){let e=PTServiceFilters.parseURL(this.options.address),t=[e.protocol,"://",e.host];e.port&&t.push(`:${e.port}`),t.push(e.path),"/"!=e.path.substr(-1)&&t.push("/"),t.push("transmission/rpc"),this.options.address=t.join("")}console.log("transmission.init",this.options.address)}call(e,t){return console.log("transmission.call",e,t),new Promise(((s,a)=>{switch(e){case"addTorrentFromURL":this.addTorrentFromUrl(t.url,t.savePath,t.autoStart,(e=>{s(e)}),t.upLoadLimit);break;case"getFreeSpace":this.getFreeSpace(t.path,(e=>{s(e)}));break;case"testClientConnectivity":this.sessionStats().then((e=>{s("success"==e.result)})).catch((e=>{a(e)}))}}))}exec(t,s,a){return new Promise(((r,n)=>{var i={method:"",arguments:{},tag:""};let o={};e.extend(i,t),this.sendRequest({type:"POST",url:this.options.address,dataType:"json",data:JSON.stringify(i),timeout:PTBackgroundService.options.connectClientTimeout,headers:this.headers},(e=>{s&&s(e,a),r(e)}),((e,t,s)=>{switch(e.status){case 0:o={status:"error",code:e.status,msg:i18n.t("downloadClient.serverIsUnavailable")},n&&n(o);break;case 401:o={status:"error",code:e.status,msg:i18n.t("downloadClient.permissionDenied")},n&&n(o);break;default:o={status:"error",code:e.status,msg:t||i18n.t("downloadClient.unknownError")},n&&n(o)}}))}))}sendRequest(t,a,r){e.ajax(t).done(((e,t)=>{a&&a(e,t)})).fail(((e,n,i)=>{409===e.status?(this.sessionId=e.getResponseHeader(s),this.headers[s]=this.sessionId,t.headers=this.headers,this.sendRequest(t,a,r)):r&&r(e,n,i)}))}sessionStats(){return this.exec({method:"session-stats"})}addTorrentFromUrl(e,t,s,a,r=0){var n={method:"torrent-add",arguments:{filename:e,paused:!s}};t&&(n.arguments["download-dir"]=t),r&&r>0&&(n.arguments.uploadLimit=r),e.startsWith("magnet:")?(n.arguments.filename=e,this.addTorrent(n,a)):PTBackgroundService.requestMessage({action:"getTorrentDataFromURL",data:e}).then((e=>{var t=new FileReader;t.onload=e=>{var t=e.target.result,s=t.indexOf("base64,");if(-1!=s){var r=t.substring(s+7);delete n.arguments.filename,n.arguments.metainfo=r,this.addTorrent(n,a)}},t.readAsDataURL(e)})).catch((e=>{a&&a(e)}))}addTorrent(e,t){this.exec(e).then((e=>{"success"===e.result?t&&(e.arguments["torrent-added"]?t(e.arguments["torrent-added"]):e.arguments["torrent-duplicate"]&&t({status:"duplicate",torrent:e.arguments["torrent-duplicate"]})):t&&t(e.result||e)})).catch((e=>{t&&t(e)}))}getFreeSpace(e,t){this.exec({method:"free-space",arguments:{path:e}}).then((e=>{t&&t(e)})).catch((e=>{t&&t(e)}))}}}(jQuery,window);