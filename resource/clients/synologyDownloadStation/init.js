!function(t,e){e.synologyDownloadStation=class{init(t){this.options=t,this.sessionId="",this.synoToken="","/"==this.options.address.substr(-1)&&(this.options.address=this.options.address.substr(0,this.options.address.length-1))}getSessionId(){return new Promise(((e,o)=>{let s=`${this.options.address}/webapi/auth.cgi?api=SYNO.API.Auth&version=3&method=login&account=${encodeURIComponent(this.options.loginName)}&passwd=${encodeURIComponent(this.options.loginPwd)}&session=DownloadStation&format=sid&enable_syno_token=yes`;t.ajax({url:s,timeout:PTBackgroundService.options.connectClientTimeout,dataType:"json"}).done((t=>{t&&t.success?(this.sessionId=t.data.sid,this.synoToken=t.data.synotoken,e(this.sessionId)):o({status:"error",code:t.error.code,msg:i18n.t("downloadClient.permissionDenied")})})).fail((()=>{o()}))}))}call(t,e){return console.log("synologyDownloadStation.call",t,e),new Promise(((o,s)=>{switch(t){case"addTorrentFromURL":this.addTorrentFromUrl(e,(t=>{t&&t.success?o(t):s(t)}));break;case"testClientConnectivity":this.getSessionId().then((t=>{o(""!=t)})).catch((t=>{s(t)}))}}))}addTorrentFromUrl(t,e){if(!this.sessionId)return void this.getSessionId().then((o=>{o?this.addTorrentFromUrl(t,e):e({status:"error",msg:i18n.t("downloadClient.serverConnectionFailed")})})).catch((t=>{e(t)}));let o={api:"SYNO.DownloadStation2.Task",method:"create",version:2,create_list:!1,_sid:this.sessionId},s={"X-SYNO-TOKEN":this.synoToken},n=(t.savePath||"")+"";if("/"===n.substr(-1)&&(n=n.substr(0,n.length-1)),o.destination=`"${n||""}"`,t.url.startsWith("magnet:"))o.type='"url"',o.url=[t.url],this.addTorrent(o,t,e);else{o.type='"file"',o.file=["torrent"];let n=new FormData;Object.keys(o).forEach((t=>{let e=o[t];void 0!==e&&(Array.isArray(e)&&(e=JSON.stringify(e)),n.append(t,e))})),PTBackgroundService.requestMessage({action:"getTorrentDataFromURL",data:{url:t.url,parseTorrent:!0}}).then((o=>{n.append("torrent",o.content,`${o.torrent.name}.torrent`),this.addTorrent(n,s,t,e)})).catch((t=>{e&&e(t)}))}}addTorrent(e,o,s,n){t.ajax({url:`${this.options.address}/webapi/entry.cgi`,headers:o,timeout:PTBackgroundService.options.connectClientTimeout,type:"POST",processData:!1,contentType:!1,data:e,dataType:"json"}).done((t=>{if(console.log(t),t.error){let e={400:i18n.t("downloadClient.fileUploadFailed"),401:i18n.t("downloadClient.maxNumberOfTasksReached"),402:i18n.t("downloadClient.destinationDenied",{path:s.savePath}),403:i18n.t("downloadClient.destinationDoesNotExist",{path:s.savePath})};t.error.code&&(t.msg=e[t.error.code])}n(t)})).fail((()=>{n({status:"error",msg:i18n.t("downloadClient.serverConnectionFailed")})}))}}}(jQuery,window);